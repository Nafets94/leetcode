public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int n = 0;
        int m = 0;
        if (matrix != null && matrix.Length > 0)
        {
            n = matrix.Length;
            m = matrix[0].Length;
        }

        int[] array = new int[n*m];

        int q = 0;
        for (int i=0; i<matrix.Length; i++) {
            for(int j=0; j<matrix[i].Length; j++) {
                array[q] = matrix[i][j];
                q++;
            }
        }

        return BinarySearch(array, 0, array.Length-1, target);
    }

    public bool BinarySearch(int[] nums, int left, int right, int target) {
        if (left > right)
            return false;

        int mid = left + (right - left) / 2;

        if (target == nums[mid])
            return true;
        else if (target < nums[mid])
            return BinarySearch(nums, left, mid-1, target);
        else
            return BinarySearch(nums, mid+1, right, target);
    }
}